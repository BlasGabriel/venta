generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auditoria {
  id_auditoria   Int      @id @default(autoincrement())
  id_usuario     Int
  fecha          DateTime @db.Date
  hora           DateTime @db.Time(0)
  mensaje        String   @db.VarChar(200)
  tipo_operacion Int
  usuario        usuario  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_auditoria")

  @@index([id_usuario], map: "id_usuario")
}

model cargo {
  id_cargo       Int           @id @default(autoincrement())
  descripcion    String        @db.VarChar(200)
  id_dependencia Int
  estado         Int           @default(1) @db.TinyInt
  dependencia    dependencia   @relation(fields: [id_dependencia], references: [id_dependencia], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_dependencia_cargo")
  funcionario    funcionario[]

  @@index([id_dependencia], map: "id_dependencia")
}

model categoria {
  id_categoria Int        @id @default(autoincrement())
  descripcion  String     @db.VarChar(200)
  estado       Int        @default(1) @db.TinyInt
  producto     producto[]
}

model ciudad {
  id_ciudad   Int         @id @default(autoincrement())
  descripcion String      @db.VarChar(200)
  cliente     cliente[]
  persona     persona[]
  proveedor   proveedor[]
}

model cliente {
  id_cliente    Int             @id @default(autoincrement())
  descripcion   String          @db.VarChar(200)
  ruc           Int
  telefono      String          @db.VarChar(200)
  direccion     String          @db.VarChar(200)
  email         String          @db.VarChar(200)
  estado        Int             @default(1) @db.TinyInt
  opera_credito Int
  id_ciudad     Int
  ciudad        ciudad          @relation(fields: [id_ciudad], references: [id_ciudad], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_ciudad_cliente")
  cobro         cobro[]
  cuenta_cobrar cuenta_cobrar[]

  @@index([id_ciudad], map: "id_ciudad")
}

model cobro {
  id_cobro        Int      @id @default(autoincrement())
  id_cliente      Int
  subtotal        Int
  descuento       Int
  total           Int
  fecha           DateTime @db.Date
  fecha_anulacion DateTime @db.Date
  id_usuario      Int
  estado          Int      @default(1) @db.TinyInt
  cliente         cliente  @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cliente_cobro")
  usuario         usuario  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_cobro")

  @@index([id_cliente], map: "id_cliente")
  @@index([id_usuario], map: "id_usuario")
}

model compra {
  id_compra       Int            @id @default(autoincrement())
  fecha           DateTime       @db.Date
  id_usuario      Int
  estado          Int            @default(1) @db.TinyInt
  id_proveedor    Int
  total_iva       Decimal        @db.Decimal(10, 0)
  subtotal        Int
  descuento       Float          @db.Float
  total           Int
  fecha_anulacion DateTime       @db.Date
  id_deposito     Int
  tipo_operacion  Int
  deposito        deposito       @relation(fields: [id_deposito], references: [id_deposito], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_deposito_compra")
  proveedor       proveedor      @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_proveedor_compra")
  usuario         usuario        @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_compra")
  cuenta_pagar    cuenta_pagar[]

  @@index([id_deposito], map: "id_deposito")
  @@index([id_proveedor], map: "id_proveedor")
  @@index([id_usuario], map: "id_usuario")
}

model cuenta_cobrar {
  id_cuenta_cobrar   Int          @id @default(autoincrement())
  id_venta           Int
  id_cliente         Int
  fecha              DateTime     @db.Date
  fecha_pago         DateTime     @db.Date
  monto              Int
  porcentaje_interes Int
  tipo_interes       Int
  estado             Int          @default(1) @db.TinyInt
  cliente            cliente      @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cliente_cuenta_cobrar")
  venta              venta        @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_venta_cuenta_cobrar")
  item_cobro         item_cobro[]

  @@index([id_cliente], map: "id_cliente")
  @@index([id_venta], map: "id_venta")
}

model cuenta_pagar {
  id_cuenta_pagar    Int         @id @default(autoincrement())
  id_compra          Int
  id_proveedor       Int
  fecha              DateTime    @db.Date
  fecha_pago         DateTime    @db.Date
  monto              Int
  porcentaje_interes Float       @db.Float
  tipo_interes       Int
  estado             Int         @default(1) @db.TinyInt
  compra             compra      @relation(fields: [id_compra], references: [id_compra], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_compra_cuenta_pagar")
  proveedor          proveedor   @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_proveedor_cuenta_pagar")
  item_pago          item_pago[]

  @@index([id_compra], map: "id_compra")
  @@index([id_proveedor], map: "id_proveedor")
}

model dependencia {
  id_dependencia Int           @id @default(autoincrement())
  descripcion    String        @db.VarChar(200)
  estado         Int           @default(1) @db.TinyInt
  cargo          cargo[]
  funcionario    funcionario[]
}

model deposito {
  id_deposito                                     Int         @id @default(autoincrement())
  descripcion                                     String      @db.VarChar(200)
  direccion                                       String      @db.VarChar(200)
  telefono                                        String      @db.VarChar(200)
  estado                                          Int         @default(1) @db.TinyInt
  id_encargado                                    Int
  compra                                          compra[]
  funcionario                                     funcionario @relation(fields: [id_encargado], references: [id_funcionario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_encargado_deposito")
  stock                                           stock[]
  traslado_traslado_id_deposito_destinoTodeposito traslado[]  @relation("traslado_id_deposito_destinoTodeposito")
  traslado_traslado_id_deposito_origenTodeposito  traslado[]  @relation("traslado_id_deposito_origenTodeposito")

  @@index([id_encargado], map: "id_encargado")
}

model funcionario {
  id_funcionario Int            @id @default(autoincrement())
  id_persona     Int
  fecha_ingreso  DateTime       @db.Date
  fecha_baja     DateTime       @db.Date
  id_dependencia Int
  id_cargo       Int
  salario        Int
  horario        Int
  estado         Int            @default(1) @db.TinyInt
  deposito       deposito[]
  cargo          cargo          @relation(fields: [id_cargo], references: [id_cargo], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cargo_funcionario")
  dependencia    dependencia    @relation(fields: [id_dependencia], references: [id_dependencia], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_dependencia_funcionario")
  persona        persona        @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_persona_funcionario")
  licencia       licencia[]
  pago_salario   pago_salario[]
  proveedor      proveedor[]
  traslado       traslado[]

  @@index([id_cargo], map: "id_cargo")
  @@index([id_dependencia], map: "id_dependencia")
  @@index([id_persona], map: "id_persona")
}

model item_cobro {
  id_item_cobro    Int           @id @default(autoincrement())
  id_cuenta_cobrar Int
  monto_nominal    Int
  monto_real       Int
  cuenta_cobrar    cuenta_cobrar @relation(fields: [id_cuenta_cobrar], references: [id_cuenta_cobrar], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cuenta_cobrar_cobro")

  @@index([id_cuenta_cobrar], map: "id_cuenta_cobrar")
}

model item_compra {
  id_item_compra  Int      @id @default(autoincrement())
  id_producto     Int
  cantidad        Int
  precio_unitario Int
  monto_iva       Decimal  @db.Decimal(10, 0)
  producto        producto @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_producto_item_compra")

  @@index([id_producto], map: "id_produtco")
}

model item_pago {
  id_item_pago    Int          @id @default(autoincrement())
  id_cuenta_pagar Int
  monto_nominal   Int
  monto_real      Int
  cuenta_pagar    cuenta_pagar @relation(fields: [id_cuenta_pagar], references: [id_cuenta_pagar], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_cuenta_pagar_pago")

  @@index([id_cuenta_pagar], map: "id_cuenta_pagar")
}

model item_traslado {
  id_traslado Int      @id @default(autoincrement())
  id_producto Int
  cantidad    Int
  producto    producto @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_producto_traslado")

  @@index([id_producto], map: "id_producto")
}

model item_venta {
  id_item_venta   Int      @id @default(autoincrement())
  id_producto     Int
  cantidad        Int
  precio_unitario Int
  monto_iva       Decimal  @db.Decimal(11, 0)
  id_venta        Int
  producto        producto @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_producto_venta")
  venta           venta    @relation(fields: [id_venta], references: [id_venta], onUpdate: Restrict, map: "fk_id_venta")

  @@index([id_producto], map: "id_producto")
  @@index([id_venta], map: "id_venta")
}

model licencia {
  id_licencia      Int           @id @default(autoincrement())
  id_funcionario   Int
  id_tipo_licencia Int
  fecha_desde      DateTime      @db.Date
  fecha_hasta      DateTime      @db.Date
  hora_desde       DateTime      @db.Time(0)
  hora_hasta       DateTime      @db.Time(0)
  remunerado       Int
  observacion      String        @db.VarChar(200)
  funcionario      funcionario   @relation(fields: [id_funcionario], references: [id_funcionario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_funcionario_licencia")
  tipo_licencia    tipo_licencia @relation(fields: [id_tipo_licencia], references: [id_tipo_licencia], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_tipo_licencia_licencia")

  @@index([id_funcionario], map: "id_funcionario")
  @@index([id_tipo_licencia], map: "id_tipo_licencia")
}

model pago {
  id_pago         Int       @id @default(autoincrement())
  id_proveedor    Int
  subtotal        Int
  descuento       Int
  total           Int
  fecha           DateTime  @db.Date
  fecha_anulacion DateTime  @db.Date
  id_usuario      Int
  estado          Int       @default(1) @db.TinyInt
  proveedor       proveedor @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_proveedor_pago")
  usuario         usuario   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_usuario_pago")

  @@index([id_proveedor], map: "id_proveedor")
  @@index([id_usuario], map: "id_usuario")
}

model pago_salario {
  id_pago_salario        Int         @id @default(autoincrement())
  id_funcionario         Int
  fecha_pago             DateTime    @db.Date
  correspondiente_a_mes  DateTime    @db.Date
  correspondiente_a_anho Int         @db.Year
  monto_salario          Int
  descuento              Int
  extra                  Int
  monto_real             Int
  estado                 Int         @default(1) @db.TinyInt
  funcionario            funcionario @relation(fields: [id_funcionario], references: [id_funcionario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_funcionario_pago_salario")

  @@index([id_funcionario], map: "id_funcionario")
}

model perfil {
  id_perfil   Int       @id @default(autoincrement())
  descripcion String    @db.VarChar(200)
  estado      Int       @default(1) @db.TinyInt
  usuario     usuario[]
}

model persona {
  id_persona  Int           @id @default(autoincrement())
  documento   Int
  apellido    String        @db.VarChar(200)
  nombre      String        @db.VarChar(200)
  direccion   String        @db.VarChar(200)
  id_ciudad   Int
  email       String        @db.VarChar(200)
  foto        Bytes         @db.MediumBlob
  funcionario funcionario[]
  ciudad      ciudad        @relation(fields: [id_ciudad], references: [id_ciudad], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_ciudad_persona")
  usuario     usuario[]

  @@index([id_ciudad], map: "id_ciudad")
}

model producto {
  id_producto         Int              @id @default(autoincrement())
  descripcion         String           @db.VarChar(200)
  codigo_barra        String           @db.VarChar(150)
  precio_compra       Float            @db.Float
  precio_venta_minimo Float            @db.Float
  precio_venta_maximo Float            @db.Float
  porcentaje_iva      Float            @db.Float
  id_categoria        Int
  id_unidad_medida    Int
  foto                Bytes            @db.MediumBlob
  observacion         String           @db.VarChar(200)
  item_compra         item_compra[]
  item_traslado       item_traslado[]
  item_venta          item_venta[]
  categoria           categoria        @relation(fields: [id_categoria], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_categoria_producto")
  unidad_de_medida    unidad_de_medida @relation(fields: [id_unidad_medida], references: [id_unidad_medida], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_unidad_medida_producto")
  stock               stock[]

  @@index([id_categoria], map: "id_categoria")
  @@index([id_unidad_medida], map: "id_unidad_medida")
}

model proveedor {
  id_proveedor   Int            @id @default(autoincrement())
  descripcion    String         @db.VarChar(200)
  ruc            Int
  id_responsable Int
  telefono       String         @db.VarChar(200)
  direccion      String         @db.VarChar(200)
  email          String         @db.VarChar(200)
  estado         Int            @default(1) @db.TinyInt
  opera_credito  Int
  id_ciudad      Int
  compra         compra[]
  cuenta_pagar   cuenta_pagar[]
  pago           pago[]
  ciudad         ciudad         @relation(fields: [id_ciudad], references: [id_ciudad], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_ciudad_proveedor")
  funcionario    funcionario    @relation(fields: [id_responsable], references: [id_funcionario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_responsable_proveedor")

  @@index([id_ciudad], map: "id_ciudad")
  @@index([id_responsable], map: "id_responsable")
}

model stock {
  id_stock     Int      @id @default(autoincrement())
  id_producto  Int
  id_deposito  Int
  cantidad     Int
  stock_minimo Int
  deposito     deposito @relation(fields: [id_deposito], references: [id_deposito], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_deposito_stock")
  producto     producto @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_producto_stock")

  @@index([id_deposito], map: "id_deposito")
  @@index([id_producto], map: "id_producto")
}

model tipo_licencia {
  id_tipo_licencia Int        @id @default(autoincrement())
  descripcion      String     @db.VarChar(200)
  licencia         licencia[]
}

model traslado {
  id_traslado                                     Int         @id @default(autoincrement())
  fecha                                           DateTime    @db.Date
  fecha_cierre                                    DateTime    @db.Date
  estado                                          Int         @default(1) @db.TinyInt
  id_responsable                                  Int
  id_deposito_origen                              Int
  id_deposito_destino                             Int
  id_transporte                                   Int
  deposito_traslado_id_deposito_destinoTodeposito deposito    @relation("traslado_id_deposito_destinoTodeposito", fields: [id_deposito_destino], references: [id_deposito], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_deposito_destino_traslado")
  deposito_traslado_id_deposito_origenTodeposito  deposito    @relation("traslado_id_deposito_origenTodeposito", fields: [id_deposito_origen], references: [id_deposito], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_deposito_origen_traslado")
  funcionario                                     funcionario @relation(fields: [id_responsable], references: [id_funcionario], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_responsable_traslado")

  @@index([id_deposito_destino], map: "id_deposito_destino")
  @@index([id_deposito_origen], map: "id_deposito_origen")
  @@index([id_responsable], map: "id_responsable")
  @@index([id_transporte], map: "id_transporte")
}

model unidad_de_medida {
  id_unidad_medida Int        @id @default(autoincrement())
  descripcion      String     @db.VarChar(200)
  abreviatura      String     @db.VarChar(10)
  producto         producto[]
}

model usuario {
  id_usuario Int         @id @default(autoincrement())
  id_persona Int
  id_perfil  Int
  login      String      @db.VarChar(200)
  password   String      @db.VarChar(400)
  estado     Int         @default(1) @db.TinyInt
  auditoria  auditoria[]
  cobro      cobro[]
  compra     compra[]
  pago       pago[]
  perfil     perfil      @relation(fields: [id_perfil], references: [id_perfil], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_perfil_usuario")
  persona    persona     @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "fk_id_persona_usuario")

  @@index([id_perfil], map: "id_perfil")
  @@index([id_persona], map: "id_persona")
}

model venta {
  id_venta        Int             @id @default(autoincrement())
  fecha           Int
  id_usuario      Int
  estado          Int             @default(1) @db.TinyInt
  id_cliente      Int
  total_iva       Float           @db.Float
  subtotal        Int
  descuento       Int
  total           Int
  fecha_anulacion DateTime        @db.Date
  id_deposito     Int
  tipo_operacion  Int
  cuenta_cobrar   cuenta_cobrar[]
  item_venta      item_venta[]

  @@index([id_cliente], map: "id_cliente")
  @@index([id_deposito], map: "id_deposito")
  @@index([id_usuario], map: "id_usuario")
}
